{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/users/users.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/shared/user.service.ts","./src/app/users/users.component.css","./src/app/users/users.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,wF;;;;;;;;;;;;ACAf;AAAe,qgCAAs8B,kDAAkD,8nBAA8nB,+CAA+C,+xBAA+xB,gDAAgD,0nBAA0nB,+CAA+C,2oBAA2oB,8CAA8C,kpBAAkpB,iDAAiD,yrBAAyrB,6CAA6C,2nBAA2nB,8CAA8C,krBAAkrB,+CAA+C,4lBAA4lB,iDAAiD,mrBAAmrB,8CAA8C,4oBAA4oB,qDAAqD,6oBAA6oB,4CAA4C,y9BAAy9B,eAAe,iCAAiC,mBAAmB,iCAAiC,mBAAmB,2W;;;;;;;;;;;;ACAh9U;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;ACnMA;AAAe,6GAA8C,+H;;;;;;;;;;;;;;;;;;;;ACAI;AACjE,SAAS;AACsC;AACqC;AAkBpF,IAAa,YAAY,oBAAzB,MAAa,YAAY;IAhBzB;QAiBE,UAAK,GAAG,eAAe,CAAC;IAC1B,CAAC;CAAA;AAFY,YAAY;IAhBxB,8DAAQ,CAAC;QACR,YAAY,EAAG,CAAE,cAAY,CAAC;QAC9B,OAAO,EAAI,CAAC,cAAY,EAAC,0DAAW,EAAC,kEAAmB,CAAC;QACzD,OAAO,EAAG,CAAC,4DAAY,EAAC,0DAAW,EAAC,kEAAmB,CAAC;QAExD,OAAO,EAAG,CAAC,oEAAsB,CAAC;KACnC,CAAC;IAGD,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,yMAAmC;;KAEpC,CAAC;GAGW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;ACrBiC;AACjB;AACM;AACkB;AACT;AAEG;AAEZ;AACU;AAkBzD,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAhBrB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,2DAAY;YACZ,qEAAc;SACf;QACD,OAAO,EAAE;YACP,uEAAa;YACb,4DAAY;YACZ,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,uEAAkB,CAAC,OAAO,EAAE;SAC7B;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;AC3BqB;AACO;AAIS;AAK3D,IAAa,WAAW,GAAxB,MAAa,WAAW;IA8BtB,YAAoB,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;QA5BrC,iBAAY,GAAS;YACnB,GAAG,EAAE,EAAE;YACP,QAAQ,EAAG,EAAE;YACb,KAAK,EAAG,EAAE;YACV,OAAO,EACP;gBACE,MAAM,EAAG,EAAE;gBACX,KAAK,EAAG,EAAE;gBACV,IAAI,EAAG,EAAE;gBACT,OAAO,EAAE,EAAE;gBACX,GAAG,EACH;oBACE,GAAG,EAAG,EAAE;oBACR,IAAI,EAAG,EAAE;iBACV;aACF;YACD,KAAK,EAAG,SAAS;YACjB,OAAO,EAAG,EAAE;YACZ,OAAO,EACP;gBACE,IAAI,EAAG,EAAE;gBACT,WAAW,EAAG,EAAE;gBAChB,EAAE,EAAG,EAAE;aAER;SAEF,CAAC;IAKD,CAAC;IAED,QAAQ,CAAC,IAAW;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wEAAW,CAAC,UAAU,GAAG,WAAW,EAAE,IAAI,CAAC,CAAC;IACpE,CAAC;IAED,QAAQ;QAEN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAW,CAAC,UAAU,GAAG,WAAW,CAAC,CAAC;IAC7D,CAAC;IAED,OAAO,CAAE,IAAW;QAElB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wEAAW,CAAC,UAAU,GAAE,kBAAkB,GAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAC,IAAI,CAAC,CAAC;IACtF,CAAC;IAED,UAAU,CAAC,GAAW;QAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,wEAAW,CAAC,UAAU,GAAC,kBAAkB,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IAChF,CAAC;CACH;;YAxB4B,+DAAU;;AA9B1B,WAAW;IAHvB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,WAAW,CAsDvB;AAtDuB;;;;;;;;;;;;;ACVxB;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;;;;ACCP;AACmB;AAGzE,aAAa;AACkC;AACqC;AAepF,IAAa,cAAc,sBAA3B,MAAa,cAAc;IAMzB,YAAoB,WAAyB;QAAzB,gBAAW,GAAX,WAAW,CAAc;QAJ7C,eAAU,GAAG,yJAAyJ;IAQtK,CAAC;IAED,QAAQ;QACN,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IACD,QAAQ,CAAC,IAAa;QAErB,IAAG,IAAI,CAAC,KAAK,CAAC,GAAG,IAAE,EAAE,EACrB;YACC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAGnD,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,2CAA2C,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1E,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;YAE3B,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBAEL,OAAO,CAAC,GAAG,CAAC,iDAAiD,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC;SACJ;aAED;YACG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAEnD,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;gBACzC,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,yBAAyB,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACxD,IAAI,CAAC,KAAK,CAAC,GAAG,GAAC,EAAE,CAAC;gBAClB,IAAI,CAAC,eAAe,EAAE,CAAC;YAE1B,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBAEJ,OAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;YAC1D,CAAC,CAAC,CAAC;SACL;IAED,CAAC;IAED,SAAS,CAAC,IAAc;QAEtB,IAAG,IAAI,EACP;YACI,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,WAAW,CAAC,YAAY;gBAC7B;oBACI,GAAG,EAAG,EAAE;oBACR,QAAQ,EAAG,EAAE;oBACb,KAAK,EAAG,EAAE;oBACV,OAAO,EACP;wBACE,MAAM,EAAG,EAAE;wBACX,KAAK,EAAG,EAAE;wBACV,IAAI,EAAG,EAAE;wBACT,OAAO,EAAG,EAAE;wBACZ,GAAG,EACH;4BACE,GAAG,EAAG,EAAE;4BACR,IAAI,EAAG,EAAE;yBACV;qBACF;oBACD,KAAK,EAAG,SAAS;oBACjB,OAAO,EAAG,EAAE;oBACZ,OAAO,EACP;wBACE,IAAI,EAAG,EAAE;wBACT,WAAW,EAAG,EAAE;wBAChB,EAAE,EAAG,EAAE;qBACR;iBACJ;SACJ;IACH,CAAC;IAED,eAAe;QAEX,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;YAEzC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,GAAa,CAAC;YACvC,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAC,SAAS,EAAC,CAAC,CAAC,CAAC,CAAC;QAC/E,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;YAEH,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,IAAW;QAEd,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC;IACzC,CAAC;IAED,QAAQ,CAAC,GAAY,EAAC,IAAc;QAEhC,IAAG,OAAO,CAAC,kCAAkC,CAAC,IAAE,IAAI,EACpD;YACI,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBAG9C,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;YAG7C,CAAC,EACD,CAAC,GAAG,EAAC,EAAE;gBAEH,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACN;aAED;SAEC;IACL,CAAC;CACF;;YA9HmC,gEAAW;;AANlC,cAAc;IAd1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,mNAAqC;QAErC,SAAS,EAAG,CAAC,gEAAW,CAAC;;KAE1B,CAAC;IAED,8DAAQ,CAAC;QACR,YAAY,EAAG,CAAE,gBAAc,CAAC;QAChC,OAAO,EAAI,CAAC,gBAAc,EAAC,0DAAW,EAAC,kEAAmB,CAAC;QAC3D,OAAO,EAAG,CAAC,4DAAY,EAAC,0DAAW,EAAC,kEAAmB,CAAC;QACxD,OAAO,EAAG,CAAC,oEAAsB,CAAC;KACnC,CAAC;GACW,cAAc,CAoI1B;AApI0B;;;;;;;;;;;;;ACtB3B;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;IAChB,UAAU,EAAG,KAAK;CACnB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;AChBpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-users></app-users>\"","export default \"<!-- <p>ramkumars project</p> -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-6\\\">\\n\\n        <div class=\\\"card\\\">\\n\\n            <div class=\\\"card-header strong info-color white-text text-center\\\">\\n                Create User(Add/Register)\\n            </div>\\n\\n            <div class=\\\"card-body\\\">\\n\\n                <form #userForm=\\\"ngForm\\\" (ngSubmit)=\\\"userForm.valid && onSubmit(userForm)\\\">\\n                         <div class=\\\"md-form\\\">\\n                            <input type=\\\"hidden\\\" name=\\\"_id\\\" #_id=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser._id\\\" class=\\\"form=control\\\" id=\\\"userForm_id\\\" mdbInput/>\\n                        </div>\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"username\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.username\\\" class=\\\"form-control\\\" id=\\\"userFormusername\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !username.valid}\\\"/>\\n                            <label for=\\\"userFormusername\\\">UserName</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && username.errors\\\">\\n                            <label *ngIf=\\\"username.errors.required\\\">User Name required</label>\\n                        </div>\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.email\\\" class=\\\"form-control\\\" id=\\\"userFormemail\\\" \\n                            mdbInput required [pattern]=\\\"emailRegex\\\" [ngClass]=\\\"{'invalid' : userForm.submitted && !email.valid}\\\"/>\\n                            <label for=\\\"userFormemail\\\">Email</label>                            \\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && email.errors\\\">\\n                            <label *ngIf=\\\"email.errors.required\\\">Email Required!</label>\\n                            <label *ngIf=\\\"email.errors.pattern\\\">Email is invalid!</label>\\n                        </div>\\n\\n                        <fieldset ngModelGroup=\\\"address\\\">\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"street\\\" #street=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.address.street\\\" class=\\\"form-control\\\" id=\\\"userFormAddressStreet\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !street.valid}\\\"/>\\n                            <label for=\\\"userFormAddressStreet\\\">Address - Street</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && street.errors\\\">\\n                            <label *ngIf=\\\"street.errors\\\">Address street required!</label>\\n                        </div>\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"suite\\\" #suite=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.address.suite\\\" class=\\\"form-control\\\" id=\\\"userFormAddressSuite\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !suite.valid}\\\"/>\\n                            <label for=\\\"userFormAddressSuite\\\">Address - Suite</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && suite.errors\\\">\\n                            <label *ngIf=\\\"suite.errors\\\">Address Suite required!</label>\\n                        </div>\\n\\n                        \\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"city\\\" #city=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.address.city\\\" class=\\\"form-control\\\" id=\\\"userFormAddressCity\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !city.valid}\\\"/>\\n                            <label for=\\\"userFormAddressCity\\\">Address - City</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && city.errors\\\">\\n                            <label *ngIf=\\\"city.errors\\\">Address City required!</label>\\n                        </div>\\n\\n                        \\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"zipcode\\\" #zipcode=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.address.zipcode\\\" class=\\\"form-control\\\" id=\\\"userFormAddressZipcode\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !zipcode.valid}\\\"/>\\n                            <label for=\\\"userFormAddressZipcode\\\">Address - Zipcode</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && zipcode.errors\\\">\\n                            <label *ngIf=\\\"zipcode.errors\\\">Address Zipcode required!</label>\\n                        </div>\\n\\n                        <fieldset ngModelGroup=\\\"geo\\\">\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"lat\\\" #lat=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.address.geo.lat\\\" class=\\\"form-control\\\" id=\\\"userFormAddressGeoLat\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !lat.valid}\\\"/>\\n                            <label for=\\\"userFormAddressGeoLat\\\">Address - Geo Lat</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && lat.errors\\\">\\n                            <label *ngIf=\\\"lat.errors\\\">Address - Geo Lat required!</label>\\n                        </div>\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"lang\\\" #lang=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.address.geo.lang\\\" class=\\\"form-control\\\" id=\\\"userFormAddressGeoLang\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !lang.valid}\\\"/>\\n                            <label for=\\\"userFormAddressGeoLang\\\">Address - Geo Lang</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && lang.errors\\\">\\n                            <label *ngIf=\\\"lang.errors\\\">Address Geo Lang required!</label>\\n                        </div>\\n                        </fieldset>\\n                    </fieldset>\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.phone\\\" class=\\\"form-control\\\" id=\\\"userFormPhone\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !phone.valid}\\\"/>\\n                            <label for=\\\"userFormPhone\\\">Phone</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && phone.errors\\\">\\n                            <label *ngIf=\\\"phone.errors\\\">Phone number required!</label>\\n                        </div>\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"website\\\" #website=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.website\\\" class=\\\"form-control\\\" id=\\\"userFormWebsite\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !website.valid}\\\"/>\\n                            <label for=\\\"userFormWebsite\\\">Website</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && website.errors\\\">\\n                            <label *ngIf=\\\"website.errors\\\">Website required!</label>\\n                        </div>\\n\\n<!--read!post!crud!-->\\n                    <fieldset ngModelGroup=\\\"company\\\">\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"name\\\" #name=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.company.name\\\" class=\\\"form-control\\\" id=\\\"userFormCompanyName\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !name.valid}\\\"/>\\n                            <label for=\\\"userFormCompanyName\\\">Company Name</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && name.errors\\\">\\n                                <label *ngIf=\\\"name.errors\\\">Company name required!</label>\\n                        </div>\\n\\n\\n                        <div class=\\\"md-form\\\">\\n                            <input type=\\\"text\\\" name=\\\"catchPhrase\\\" #catchPhrase=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.company.catchPhrase\\\" class=\\\"form-control\\\" id=\\\"userFormCompanyCatchPhrase\\\" \\n                            mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !catchPhrase.valid}\\\"/>\\n                            <label for=\\\"userFormCompanyCatchPhrase\\\">Company CatchPhrase</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && catchPhrase.errors\\\">\\n                            <label *ngIf=\\\"catchPhrase.errors\\\">Company CatchPhrase required!</label>\\n                        </div>\\n\\n                        <div class=\\\"md-form\\\">\\n                                <input type=\\\"text\\\" name=\\\"bs\\\" #bs=\\\"ngModel\\\" [(ngModel)]=\\\"userService.selectedUser.company.bs\\\" class=\\\"form-control\\\" id=\\\"userFormCompanyBs\\\" \\n                                mdbInput required [ngClass]=\\\"{'invalid' : userForm.submitted && !bs.valid}\\\"/>\\n                                <label for=\\\"userFormCompanyBs\\\">Company BS</label>\\n                        </div>\\n\\n                        <div *ngIf=\\\"userForm.submitted && bs.errors\\\">\\n                            <label *ngIf=\\\"bs.errors\\\">Company BS required!</label>\\n                        </div>\\n\\n                </fieldset>\\n                       \\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">save</button>\\n                </form>\\n            </div>\\n        </div>\\n      \\n    </div>\\n    <div class=\\\"col-sm-6\\\">\\n        <table mdbTable>\\n            <thead  class=\\\"info-color white-text\\\">\\n                <tr>\\n                    <th>UserName</th>\\n                    <th>City</th>\\n                    <th>CompanyName</th>\\n                </tr>\\n                        \\n\\n            </thead>\\n            <tbody>\\n                <tr mdbTableCol *ngFor=\\\"let user of this.userService.users\\\">\\n                    <td>{{user.username}}</td>\\n                    <td>{{user.address.city}}</td>\\n                    <td>{{user.company.name}}</td>\\n                    <td><i class=\\\"fas fa-edit\\\" (click)=\\\"onEdit(user)\\\"></i></td>\\n                <td>    <i class=\\\"fas fa-fire\\\" (click)=\\\"onDelete(user._id,form)\\\"></i></td>\\n                </tr>\\n\\n            </tbody>\\n        </table>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\">Edit/Delete</button> -->\\n    </div>\\n    \\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import {FormsModule, ReactiveFormsModule } from '@angular/forms';\n//testing\nimport { CommonModule } from '@angular/common';\nimport { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n\n@NgModule({\n  declarations : [ AppComponent],\n  exports  : [AppComponent,FormsModule,ReactiveFormsModule],\n  imports : [CommonModule,FormsModule,ReactiveFormsModule],\n\n  schemas : [CUSTOM_ELEMENTS_SCHEMA]\n})\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'AngularClient';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule}  from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport  { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { AppComponent } from './app.component';\nimport { UsersComponent } from './users/users.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UsersComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MDBBootstrapModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from './user.model';\nimport { NgForOf } from '@angular/common';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  selectedUser : User ={\n    _id :'',\n    username : '',\n    email : '',\n    address :\n    {\n      street : '',\n      suite : '',\n      city : '',\n      zipcode: '',\n      geo:\n      {\n        lat : '',\n        lang : ''\n      }\n    },\n    phone : undefined,\n    website : '',\n    company :\n    {\n      name : '',\n      catchPhrase : '',\n      bs : ''\n      \n    }\n\n  };\n  users : User[];\n  constructor(private http : HttpClient) \n  {\n\n   }\n\n   postUser(user : User)\n   {\n     return this.http.post(environment.apiBaseUrl + '/saveUser', user);\n   }\n\n   getUsers()\n   {\n     return this.http.get(environment.apiBaseUrl + '/getUsers');\n   }\n\n   putUser( user : User)\n   {\n     return this.http.put(environment.apiBaseUrl+ '/updateUserById/'+`${user._id}`,user);\n   }\n\n   deleteUser(_id :string)\n   {\n     return this.http.delete(environment.apiBaseUrl+'/deleteUserById/' + `${_id}`);\n   }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXJzL3VzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","\nimport { UserService }  from '../shared/user.service';\nimport { NgForm,FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { User } from '../shared/user.model';\n\n//for testing\nimport { CommonModule } from '@angular/common';\nimport { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n  providers : [UserService],\n  \n})\n\n@NgModule({\n  declarations : [ UsersComponent],\n  exports  : [UsersComponent,FormsModule,ReactiveFormsModule],\n  imports : [CommonModule,FormsModule,ReactiveFormsModule],\n  schemas : [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class UsersComponent implements OnInit {\n\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n  \n\n  constructor(private userService : UserService) \n  {\n\n\n  }\n\n  ngOnInit() {\n    console.log('ngOninit');\n    this.resetForm();\n    this.refreshUserList();\n  }\n  onSubmit(form : NgForm)\n  {\n   if(form.value._id==\"\") \n   {\n    console.log('onSubmit::' + form.value);   \n    console.log('onSubmit::' + JSON.stringify(form.value,undefined,2));   \n    this.userService.postUser(form.value).subscribe((res)=>\n    {\n        \n        form.resetForm();\n        console.log('postUser->correctly saved:form-id-value::' + form.value._id);\n        form.value._id=\"\";\n        this.refreshUserList();\n        \n    },\n    (err)=>\n    {\n      console.log('postUser->not yet correctly saved-error coming:' + JSON.stringify(err,undefined,2));\n    });\n  }\n  else\n  {\n     this.userService.putUser(form.value).subscribe((res)=>\n     {\n        console.log('User updated successfully');\n        form.resetForm();\n        console.log('after-updated-form-id::' + form.value._id);\n        form.value._id=\"\";\n        this.refreshUserList();\n        \n     },\n     (err)=>\n     {\n        console.log('putuser -> not yet updated successfully');\n     });\n  }\n\n  }\n\n  resetForm(form? : NgForm)\n  {\n    if(form)\n    {\n        form.reset();\n        this.userService.selectedUser =         \n        {\n            _id : '',\n            username : '',\n            email : '',\n            address : \n            {\n              street : '',\n              suite : '',\n              city : '',\n              zipcode : '',\n              geo : \n              {\n                lat : '',\n                lang : ''\n              }\n            },\n            phone : undefined,\n            website : '',\n            company : \n            {\n              name : '',\n              catchPhrase : '',\n              bs : ''\n            }\n        }\n    }\n  }\n\n  refreshUserList()\n  {\n      this.userService.getUsers().subscribe((res)=>\n      {\n          this.userService.users = res as User[];\n          console.log('resource:' + JSON.stringify(res,undefined,2));\n          console.log('users:' + JSON.stringify(this.userService.users,undefined,2));\n      },\n      (err)=>\n      {\n          console.log('Error in retreving data');\n      });\n  }\n\n  onEdit(user : User)\n  {\n      this.userService.selectedUser = user;\n  }\n\n  onDelete(_id : string,form  : NgForm)\n  {\n      if(confirm(\"Are you sure you want to delete?\")==true)\n      {\n          this.userService.deleteUser(_id).subscribe((res)=>\n          {\n              \n              this.refreshUserList();\n              this.resetForm(form);\n              console.log('Successfully user deleted');\n\n\n          },\n          (err)=>\n          {\n              console.log('Coud not delete user');\n          });\n      }\n      else\n      {\n\n      }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  apiBaseUrl : \"api\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}